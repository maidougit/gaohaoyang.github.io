---
layout: post
title:  "开发规范"
date:   2018-11-18 18:24:54
categories: app
tags: app
excerpt: 开发规范。
mathjax: true
---

##目录
* [1.编程规约](#编程规约)
    * [<font class="fontcolor">1.1 命名规约</font>](#命名规约)
    * [<font class="fontcolor">1.2 常量定义</font>](#常量定义)
    * [<font class="fontcolor">1.3 代码格式</font>](#代码格式)
    * [<font class="fontcolor">1.4 注释规范</font>](#注释规范)
* [2.异常日志](#异常日志)
    * [<font class="fontcolor">2.1 派车单列表</font>](#派车单列表)
    * [<font class="fontcolor">2.2 派车单明细</font>](#派车单明细)
  
* [3.单元测试](#单元测试)
    * [<font class="fontcolor">3.1 单元测试</font>](#单元测试)
* [4.安全规约](#安全规约)
    * [<font class="fontcolor">4.1 安全规约</font>](#安全规约)
* [5.数据库设计规范](#数据库设计规范)
    * [<font class="fontcolor">5.1 数据库设计规范</font>](#数据库设计规范)
* [6.工程结构](#工程结构)
    * [<font class="fontcolor">3.1 工程结构</font>](#工程结构)
   
---

### 1. 编程规约
####1.1 命名规约
  1. 命名风格
   
  ```text
    1. 【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。 反例：_name / __name / $Object / name_ / name$ / Object$ 
    2. 【强制】代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 
       说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式 也要避免采用
    3. 【强制】类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外：DO / BO / DTO / VO / AO 
    4. 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从 驼峰形式。 
    5. 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。
    6. 【强制】抽象类命名使用 Abstract 或 Base 开头；异常类命名使用 Exception 结尾；测试类 命名以它要测试的类的名称开始，以 Test 结尾
    7. 【强制】中括号是数组类型的一部分，数组定义如下：String[] args; 反例：使用 String args[]的方式来定义
    8. 【强制】POJO 类中布尔类型的变量，都不要加 is，否则部分框架解析会引起序列化错误。 反例：定义为基本数据类型 Boolean isDeleted；的属性，它的方法也是 isDeleted()，RPC框架在反向解析的时候，“以为”对应的属性名称是 deleted，导致属性获取不到，进而抛出异 常。 
    9. 【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用 单数形式，但是类名如果有复数含义，类名可以使用复数形式。 
    10.  【强制】杜绝完全不规范的缩写，避免望文不知义
    反例：AbstractClass“缩写”命名成 AbsClass；condition“缩写”命名成 condi，此类随 意缩写严重降低了代码的可阅读性。 
    11. 接口和实现类的命名有两套规则
       1.【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部 的实现类用 Impl 的后缀与接口区别。 正例：CacheServiceImpl 实现 CacheService 接口。
    12. 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。 说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。 正例：枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKOWN_REASON
    13. 【参考】各层命名规约： 
      A.  Service/DAO 层方法命名规约 
        1. 获取单个对象的方法用 get 做前缀。    
        2. 获取多个对象的方法用 list 做前缀。    
        3. 获取统计值的方法用 count 做前缀。    
        4. 插入的方法用 save/insert 做前缀。    
        5. 删除的方法用 remove/delete 做前缀。    
        6. 修改的方法用 update 做前缀。
      B.  领域模型命名规约 
        1. 数据对象：xxxDO，xxx 即为数据表名
        2. 数据传输对象：xxxDTO，xxx 为业务领域相关的名称
        3. 展示对象：xxxVO，xxx 一般为网页名称。 
        4. POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。     
  ```
  2.  常量定义 
   ```text
   1. 【强制】不允许任何魔法值（即未经定义的常量）直接出现在代码中。  反例：String key = "Id#taobao_" + tradeId;       cache.put(key, value); 
   2. 【强制】long 或者 Long 初始赋值时，使用大写的 L，不能是小写的 l，小写容易跟数字 1 混 淆，造成误解
   3. 【推荐】不要使用一个常量类维护所有常量，按常量功能进行归类，分开维护。 
   4. 【推荐】常量的复用层次有五层：跨应用共享常量、应用内共享常量、子工程内共享常量、包 内共享常量、类内共享常量。  
       1. 跨应用共享常量：放置在二方库中，通常是 client.jar 中的 constant 目录下。  
       2. 应用内共享常量：放置在一方库中，通常是 modules 中的 constant 目录下。  
   5. 【推荐】对于某一类类型的常量使用枚举。例如 ： 颜色 public Enum {RED(1), YELLOW(2),BLACK(3);} 
   ```
  3. 格式规范
  ```text
   1.【强制】大括号的使用约定。如果是大括号内为空，则简洁地写成{}即可，不需要换行；如果 是非空代码块则：
        1） 左大括号前不换行。  
        2） 左大括号后换行。  
        3） 右大括号前换行。  
        4） 右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。
   2.【强制】 左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格。
   3.【强制】if/for/while/switch/do 等保留字与括号之间都必须加空格。 
   4.【强制】任何二目、三目运算符的左右两边都需要加一个空格。 
   5.【强制】采用 4 个空格缩进，禁止使用 tab 字符。
   6.【强制】注释的双斜线与注释内容之间有且仅有一个空格。
   7.【强制】单行字符数限制不超过 120 个，超出需要换行，换行时遵循如下原则：  
        1） 第二行相对第一行缩进 4 个空格，从第三行开始，不再继续缩进，参考示例。  
        2） 运算符与下文一起换行。  
        3） 方法调用的点符号与下文一起换行。  
        4） 方法调用时，多个参数，需要换行时，在逗号后进行。  
        5） 在括号前不要换行，见反例。
   8.【强制】方法参数在定义和传入时，多个参数逗号后边必须加空格
  ```

### 3. 参考
  1. [阿里巴巴java规范](https://github.com/alibaba/p3c)
  2. [雅虎军规](https://developer.yahoo.com/performance/?guccounter=1)